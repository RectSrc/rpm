/* this is a template for setting up an RSDL2 renderer
 * just attach it to your main file and also attach RSDL2_DEPS.rct and include the RSDL2 package by doing
 * package dll RSDL2;
 * you will also need to use rsdl with this:
 * use RSDL2;
 */
 
set ScreenW <- 1000;
set ScreenH <- 600;

function init()
{
    var sdlThread <- Thread(sdl2);
    var renThread <- Thread(render);
    var evtThread <- Thread(eventLoop);
    
    sdlThread >> StartThread();
    renThread >> StartThread();
    evtThread >> StartThread();
    
    RSDL2::set_WAIT_FOR_RESPONSE(true); //sets the renderer to real time rendering
    RSDL2::SetClearColor(8, 91, 27); //sets the background color to an rgb value
    
    RSDL2::WaitForInit();
    /*
     * Load your Textures, Fonts, Sounds, whatever here
     */
}

function eventLoop()
{
    while (!RSDL2::get_Quit())
    {        
        var lastEvent <- RSDL2::get_LastEvent(); // get the last event from the queue

        if (lastEvent = nil) continue; 
        
        var event <- Event(lastEvent);
        
        if (event >> Type = EventTypes >> SDL_KEYDOWN) //check if event is KEYDOWN and if its ESC close the program
            if (event >> Key = "SDL_SCANCODE_ESCAPE")
                die(0);
    }
}

        
function render()
{
    RSDL2::WaitForInit();
    Sleep(200);
    
    while (true)
    {
        if (!RSDL2::get_READY()) continue;
        Sleep(10);
        
        /*
         * Put all your Draw calls here
         */
        
        RSDL2::set_READY(false);
        
        if (RSDL2::get_Quit()) break;
    }
}

function sdl2()
{
    try
    {
        RSDL2::OpenSDLWindow("ReCT SDL Window", RSDL2::get_CENTERED(), RSDL2::get_CENTERED(), ScreenW, ScreenH);
    }
    catch
    {
        Print("Window deded");
        RSDL2::set_Quit(true);
        die(0);
    }
}